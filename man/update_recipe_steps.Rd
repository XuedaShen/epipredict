% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update.R
\name{update_recipe_steps}
\alias{update_recipe_steps}
\title{Update recipe steps}
\usage{
update_recipe_steps(x, ...)
}
\arguments{
\item{x}{A frosting object}

\item{...}{named lists of layers to update with changes. Passed as
\code{layer_name = list(parm1 = updated_pars1, parm2 = updated_pars2)}.}
}
\value{
An updated recipe.
}
\description{
Given an existing recipe or epi_recipe, update some (or all) of the steps
with different arguments.
}
\details{
Note that not all steps or arguments can
be updated easily or at all. This function only accomodates named
arguments. Furthermore, recipes with multiple steps of the same
type can not be updated using this function.
}
\examples{
r <- epi_recipe(jhu) \%>\%
  step_epi_lag(death_rate, lag = c(0, 7, 14)) \%>\%
  step_epi_ahead(death_rate, ahead = 7) \%>\%
  step_epi_lag(case_rate, lag = c(0, 7, 14)) \%>\%
  step_epi_naomit()

r$steps[[2]]$ahead
r2 <- update_recipe_steps(r, step_epi_ahead = list(ahead = 14))
r2$steps[[2]]$ahead

\dontrun{
update_recipe_steps(r, step_epi_lag = list(lag = 1:8))
r$steps[[3]] <- update(r$steps[[3]], lag = 1:8) # checks update for validity
r$steps[[3]]

r$steps[[1]] <- update(r$steps[[1]], lag = -5) # shouldn't work but does
## recipes::update is wrong / or arg validation happens somewhere else
r$steps[[1]]$lag <- -5:10 # works, but isn't checked for validity
}
}
