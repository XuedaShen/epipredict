% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layer_nonneg_preds.R
\name{layer_nonneg_preds}
\alias{layer_nonneg_preds}
\title{Lower and upper thresholds for prediction values}
\usage{
layer_nonneg_preds(
  frosting,
  pred_lower = 0,
  pred_upper = Inf,
  id = rand_id("nonneg_preds")
)
}
\arguments{
\item{frosting}{a \code{frosting} postprocessor}

\item{pred_lower}{Lower threshold for the prediction values. That is, any
predictions greater than or equal to this lower bound are retained.
Default value is \code{0}.}

\item{pred_upper}{Upper threshold for the prediction values. That is, any
predictions less than or equal to this upper bound are retained.
Default value is \code{Inf}.}

\item{id}{a random id string}
}
\value{
an updated \code{frosting} postprocessor
}
\description{
This postprocessing step is used to retain only those
prediction values that are within the specified lower and upper thresholds.
}
\examples{
jhu <- case_death_rate_subset \%>\%
  dplyr::filter(time_value > "2021-11-01", geo_value \%in\% c("ak", "ca", "ny"))
r <- epi_recipe(jhu) \%>\%
  step_epi_lag(death_rate, lag = c(0, 7, 14)) \%>\%
  step_epi_ahead(death_rate, ahead = 7) \%>\%
  recipes::step_naomit(recipes::all_predictors()) \%>\%
  recipes::step_naomit(recipes::all_outcomes(), skip = TRUE)
wf <- epi_workflow(r, parsnip::linear_reg()) \%>\% parsnip::fit(jhu)
latest <- jhu \%>\%
  dplyr::filter(time_value >= max(time_value) - 14)

f <- frosting() \%>\%
  layer_predict() \%>\%
  layer_nonneg_preds(pred_lower = 0.25, pred_upper = 0.31)
wf1 <- wf \%>\% add_frosting(f)
p <- predict(wf1, latest)
p
}
