% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/arx_forecaster_mod.R
\name{arx_epi_forecaster}
\alias{arx_epi_forecaster}
\title{Direct autoregressive forecaster with covariates}
\usage{
arx_epi_forecaster(
  epi_data,
  outcome,
  predictors,
  trainer = parsnip::linear_reg(),
  args_list = arx_args_list()
)
}
\arguments{
\item{epi_data}{An \code{epi_df} object}

\item{outcome}{A character (scalar) specifying the outcome (in the
\code{epi_df}).}

\item{predictors}{A character vector giving column(s) of predictor
variables.}

\item{trainer}{A \code{{parsnip}} model describing the type of estimation.
For now, we enforce \code{mode = "regression"}.}

\item{args_list}{A list of customization arguments to determine
the type of forecasting model. See \code{\link[=arx_args_list]{arx_args_list()}}.}
}
\value{
A list with (1) \code{predictions} an \code{epi_df} of predicted values
and (2) \code{epi_workflow}, a list that encapsulates the entire estimation
workflow
}
\description{
This is an autoregressive forecasting model for
\link[epiprocess:epi_df]{epiprocess::epi_df} data. It does "direct" forecasting, meaning
that it estimates a model for a particular target horizon.
}
\examples{
jhu <- case_death_rate_subset \%>\%
  dplyr::filter(time_value >= as.Date("2021-12-01"))

out <- arx_epi_forecaster(jhu, "death_rate",
  c("case_rate", "death_rate"))
}
