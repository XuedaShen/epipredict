% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layer_add_forecast_date.R
\name{layer_add_forecast_date}
\alias{layer_add_forecast_date}
\title{Postprocessing step to add the forecast date}
\usage{
layer_add_forecast_date(
  frosting,
  forecast_date = NULL,
  id = rand_id("add_forecast_date")
)
}
\arguments{
\item{frosting}{a \code{frosting} postprocessor}

\item{forecast_date}{The forecast date to add as a column to the \code{epi_df}.
This must be specified by the user.}

\item{id}{a random id string}
}
\value{
an updated \code{frosting} postprocessor
}
\description{
Postprocessing step to add the forecast date
}
\examples{
jhu <- case_death_rate_subset \%>\%
  dplyr::filter(time_value > "2021-11-01", geo_value \%in\% c("ak", "ca", "ny"))
r <- epi_recipe(jhu) \%>\%
  step_epi_lag(death_rate, lag = c(0, 7, 14)) \%>\%
  step_epi_ahead(death_rate, ahead = 7) \%>\%
  step_naomit(all_predictors()) \%>\%
  step_naomit(all_outcomes(), skip = TRUE)
wf <- epi_workflow(r, parsnip::linear_reg()) \%>\% fit(jhu)
latest <- jhu \%>\%
  dplyr::filter(time_value >= max(time_value) - 14)

f <- frosting() \%>\% layer_predict() \%>\% layer_add_forecast_date(forecast_date = "2021-12-31") \%>\% layer_naomit(.pred)
wf1 <- wf \%>\% add_frosting(f)

p <- predict(wf1, latest)
p
}
